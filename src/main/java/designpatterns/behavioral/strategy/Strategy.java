package designpatterns.behavioral.strategy;

public interface Strategy {

    public float calculation(float a, float b);
}
//Шаблон стратегии гласит, что "определяет семейство функциональных возможностей,
// инкапсулирует каждую из них и делает их взаимозаменяемыми".
//
//Шаблон Стратегии также известен как Политика.

//Он служит заменой подклассу.
//Он определяет каждое поведение в пределах своего собственного класса,
// устраняя необходимость в условных операторах.
//Это упрощает расширение и включение нового поведения без изменения приложения.

//Когда несколько классов отличаются только своим поведением. например, API сервлета.
//Он используется, когда вам нужны разные варианты алгоритма.

//Простыми словами:
//Шаблон стратегии позволяет выбрать наиболее подходящий алгоритм во время выполнения.